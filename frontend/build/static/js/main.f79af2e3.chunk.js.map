{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","toDoList","activeItem","id","title","completed","editing","fetchTasks","bind","handleChange","handleSubmit","getCookie","startEdit","deleteItem","strikeUnstrike","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","this","fetch","then","response","json","data","setState","e","value","target","preventDefault","csrftoken","url","method","headers","body","JSON","stringify","catch","error","console","log","task","className","onSubmit","style","flex","type","placeholder","onChange","map","index","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f79af2e3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      toDoList: [],\n      activeItem: {\n        id: null,\n        title: \"\",\n        completed: false,\n      },\n      editing: false,\n    };\n\n    this.fetchTasks = this.fetchTasks.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getCookie = this.getCookie.bind(this);\n    this.startEdit = this.startEdit.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.strikeUnstrike = this.strikeUnstrike.bind(this);\n  }\n\n  getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== \"\") {\n      const cookies = document.cookie.split(\";\");\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n\n  componentDidMount() {\n    this.fetchTasks();\n  }\n\n  fetchTasks() {\n    fetch(\"http://127.0.0.1:8000/api/task-list/\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          toDoList: data,\n        });\n      });\n  }\n\n  handleChange(e) {\n    var value = e.target.value;\n\n    this.setState({\n      activeItem: {\n        ...this.state.activeItem,\n        title: value,\n      },\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const csrftoken = this.getCookie(\"csrftoken\");\n    let url = \"http://127.0.0.1:8000/api/task-create/\";\n\n    if (this.state.editing === true) {\n      url = `http://127.0.0.1:8000/api/task-update/${this.state.activeItem.id}/`;\n      this.setState({\n        editing: false,\n      });\n    }\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"X-CSRFToken\": csrftoken,\n      },\n      body: JSON.stringify(this.state.activeItem),\n    })\n      .then((response) => {\n        this.fetchTasks();\n        this.setState({\n          activeItem: {\n            id: null,\n            title: \"\",\n            completed: false,\n          },\n        });\n      })\n      .catch((error) => {\n        console.log(\"Error: \", error);\n      });\n  }\n\n  startEdit(task) {\n    this.setState({\n      activeItem: task,\n      editing: true,\n    });\n  }\n\n  strikeUnstrike(task) {\n    task.completed = !task.completed;\n    const csrftoken = this.getCookie(\"csrftoken\");\n    const url = `http://127.0.0.1:8000/api/task-update/${task.id}/`;\n    \n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"X-CSRFToken\": csrftoken,\n      },\n      body: JSON.stringify({\n        'title': task.title,\n        'completed': task.completed,\n      })\n    }).then(() => {\n      this.fetchTasks()\n    })\n  }\n\n  deleteItem(task) {\n    const csrftoken = this.getCookie(\"csrftoken\");\n    fetch(`http://127.0.0.1:8000/api/task-delete/${task.id}/`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"X-CSRFToken\": csrftoken,\n      },\n    })\n      .then((response) => {\n        this.fetchTasks();\n      })\n      .catch((error) => {\n        console.log(\"Error: \", error);\n      });\n  }\n\n  render() {\n    let task = this.state.toDoList;\n\n    return (\n      <div className=\"container\">\n        <div className=\"task-container\">\n          <div id=\"form-wrapper\">\n            <form onSubmit={this.handleSubmit} id=\"form\">\n              <div className=\"flex-wrapper\">\n                <div style={{ flex: 6 }}>\n                  <input\n                    className=\"form-control\"\n                    id=\"title\"\n                    type=\"text\"\n                    name=\"title\"\n                    placeholder=\"Add task...\"\n                    onChange={this.handleChange}\n                    value={this.state.activeItem.title}\n                  />\n                </div>\n                <div style={{ flex: 1 }}>\n                  <input\n                    id=\"submit\"\n                    className=\"btn btn-warning\"\n                    type=\"submit\"\n                    name=\"Add\"\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n          <div id=\"list-wrapper\">\n            {task.map((task, index) => {\n              return (\n                <div key={index} className=\"task-wrapper flex-wrapper\">\n                  <div onClick={() => this.strikeUnstrike(task)} style={{ flex: 7 }}>\n                    {task.completed === true ? (\n                      <strike>{task.title}</strike>\n                    ) : (\n                      <span>{task.title}</span>\n                    )}\n                  </div>\n                  <div style={{ flex: 1 }}>\n                    <button\n                      onClick={() => this.startEdit(task)}\n                      className=\"btn btn-sm btn-outline-info\"\n                    >\n                      Edit\n                    </button>\n                  </div>\n                  <div style={{ flex: 1 }}>\n                    <button\n                      onClick={() => {\n                        this.deleteItem(task);\n                      }}\n                      className=\"btn btn-sm btn-outline-dark delete\"\n                    >\n                      -\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}